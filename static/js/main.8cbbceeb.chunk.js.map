{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","err","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCQCQ,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE3B,OACE,sBAAKC,UAAU,kDAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAA1B,cACtB,gCACE,+BAAKF,EAAL,OACA,4BAAIC,WCWGK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CACEV,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,MACjBC,GAAIK,EAAOG,GAAGR,IACTK,EAAOG,GAAGR,UCGZS,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,8BACE,uBACET,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCOHI,EAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCWEC,E,kDAnBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAMnB,SAAkBC,EAAKC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,uDAEAG,KAAKX,MAAMK,a,GAfGQ,aC2CZC,G,wDAtCb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAZ1C,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACH5C,MAAK,SAAC6C,GAAD,OAAcA,EAASC,UAC5B9C,MAAK,SAAC+C,GAAD,OAAW,EAAKX,SAAS,CAAEtB,OAAQiC,S,oBAK7C,WACE,MAAgCZ,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVO,EAAiBlC,EAAOmC,QAAO,SAACnC,GACpC,OAAOA,EAAOP,KAAK2C,cAAcC,SAASV,EAAYS,kBAExD,OAAsB,IAAlBpC,EAAOsC,OACF,yCAGP,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQkC,e,GA/BZX,c,MCClBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjD3D,M","file":"static/js/main.8cbbceeb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  //   const  = props;\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow5\">\n      <img alt=\"Robopic\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name} </h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            name={robots[i].name}\n            email={robots[i].email}\n            id={robots[i].id}\n            key={robots[i].id}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div>\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search Robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '5px solid black',\n        height: '500px',\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n  componentDidCatch(err, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooops! This not good!</h1>;\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundry';\nimport './App.css';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robots) => {\n      return robots.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    if (robots.length === 0) {\n      return <h1>Loading</h1>;\n    }\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}